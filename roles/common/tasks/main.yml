- block:
# name: Setting dotfiles

  - name: clone dotfiles from github
    git:
      repo: 'ssh://git@github.com/rigarash/dotfiles.git'
      dest: '{{ ansible_env.HOME }}/.dotfiles'
      accept_hostkey: yes

  - name: create symlinks of various configuration files 
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .gitconfig
      - .dircolors
      - .python_startup
      - .zsh.d
      - .zshrc

  - name: change shell to zsh
    user:
      name: rigarash
      shell: /bin/zsh

  - name: create folders for emacs
    file:
      path: '{{ ansible_env.HOME }}/.emacs.d'
      state: directory

  - name: create symlinks for emacs
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/.emacs.d/{{ item }}'
      dest: '{{ ansible_env.HOME }}/.emacs.d/{{ item }}'
      state: link
    with_items:
      - init.el

  become: false

- block:
# Setting for openssh

  - name: create socket folders for openssh
    file:
      path:  '{{ ansible_env.HOME }}/.ssh/socket'
      state: directory

  - name: create symlink to openssh config file
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/.ssh/{{ item }}'
      dest: '{{ ansible_env.HOME }}/.ssh/{{ item }}'
      state: link
    with_items:
      - config

  - name: check whether current authorized_keys is symlink
    stat:
      path: '{{ ansible_env.HOME }}/.ssh/authorized_keys'
    register: ssh_keys

  - name: remove current authorized_keys when symlink
    file:
      path: '{{ ansible_env.HOME }}/.ssh/authorized_keys'
      state: absent
      follow: no
    when:
      ssh_keys.stat.islnk is defined and ssh_keys.stat.islnk

  - name: setting up openssh authorized_keys
    authorized_key:
      user: '{{ ansible_env.USER }}'
      state: present
      key: "{{ lookup('file', '{{ ansible_env.HOME }}/.dotfiles/.ssh/authorized_keys') }}"

  - name: check openssh private keys
    stat:
      path: '{{ ansible_env.HOME }}/.ssh/{{ item }}'
    register: private_keys
    with_items:
      - id_rsa
      - id_rsa_v2
      - id_ecdsa

  - name: remove wrong openssh private keys
    file:
      path: '{{ item.stat.path }}'
      state: absent
      follow: no
    when:
      - item.stat.lnk_source is exists
      - item.stat.lnk_source is not match( '{{ ansible_env.USERPROFILE }}/home/ssh_private/{{ item.item }}' )
    with_items:
      - '{{ private_keys.results }}'

  - name: setting up symlinks of openssh private keys
    file:
      src:  '{{ ansible_env.USERPROFILE }}/home/ssh_private/{{ item.item }}'
      dest: '{{ item.stat.path }}'
      state: link
    with_items:
      - '{{ private_keys.results }}'

  become: false

- block:
# name: tmux settings

  - name: install tmux
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - tmux
    become: true

  - name: create symlinks of tmux configuration files
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .tmux.conf
    become: false

  - name: prepare Windows fonts directory for WSL
    file:
      path: '{{ ansible_env.HOME }}/.local/share/fonts'
      state: directory
      force: true
    become: false

  - name: use Windows fonts on WSL
    file:
      src:  /mnt/c/Windows/Fonts
      dest: '{{ ansible_env.HOME }}/.local/share/fonts/win'
      state: link
    become: false

  - name: run fc-cache
    shell: fc-cache

  when:
    - "ansible_kernel | match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"
