- block:
# name: Debian GNU/Linux specific setting

  - name: install common packages
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - aptitude
      - host
      - iputils-ping
      - psmisc
      - git

  - name: install vim
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - vim

  - name: uninstall vim-tiny
    apt:
      name: "{{ item }}"
      state: absent
      purge: yes
    with_items:
      - vim-tiny

  - name: install emacs25
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - emacs25

  - name: change /etc/locale.gen properly
    lineinfile:
      dest: /etc/locale.gen
      regexp: "^# {{ item }}"
      line:   "{{ item }}"
      state: present 
      backrefs: yes
    with_items:
      - ja_JP.UTF-8 UTF-8
      - en_US.UTF-8 UTF-8
    notify:
      - rebuild locales database
    when:
      - "ansible_distribution == 'Debian'"

  become: true
  when:
    - "ansible_os_family == 'Debian'"

- block:
# name: Setting dotfiles

  - name: clone dotfiles from github
    git:
      repo: 'ssh://git@github.com/rigarash/dotfiles.git'
      dest: '{{ ansible_env.HOME }}/.dotfiles'
      accept_hostkey: yes

  - name: create symlinks of various configuration files 
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .gitconfig
      - .dircolors
      - .python_startup
      - .zsh.d
      - .zshrc

  - name: create folders for emacs
    file:
      path: '{{ ansible_env.HOME }}/.emacs.d'
      state: directory

  - name: create symlinks for emacs
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/.emacs.d/{{ item }}'
      dest: '{{ ansible_env.HOME }}/.emacs.d/{{ item }}'
      state: link
    with_items:
      - init.el

  - name: create socket folders for openssh
    file:
      path:  '{{ ansible_env.HOME }}/.ssh/socket'
      state: directory

  - name: create symlink to openssh config file
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/.ssh/{{ item }}'
      dest: '{{ ansible_env.HOME }}/.ssh/{{ item }}'
      state: link
    with_items:
      - config

  - name: check whether current authorized_keys is symlink
    stat:
      path: '{{ ansible_env.HOME }}/.ssh/authorized_keys'
    register: ssh_keys

  - name: remove current authorized_keys when symlink
    file:
      path: '{{ ansible_env.HOME }}/.ssh/authorized_keys'
      state: absent
      follow: no
    when:
      ssh_keys.stat.islnk is defined and ssh_keys.stat.islnk

  - name: setting up openssh authorized_keys
    authorized_key:
      user: '{{ ansible_env.USER }}'
      state: present
      key: "{{ lookup('file', '{{ ansible_env.HOME }}/.dotfiles/.ssh/authorized_keys') }}"

  become: false

- block:
# name: tmux settings

  - name: install tmux
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - tmux
    become: true

  - name: create symlinks of tmux configuration files
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .tmux.conf
    become: false

  when:
    - "ansible_kernel | match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"
