- name: /etc/wsl.conf settings
  block:

  - name: create /etc/wsl.conf on wsl machine
    template:
      src: wsl.conf.j2
      dest: /etc/wsl.conf
      owner: root
      mode: '0644'
    become: true

  when:
    - "ansible_kernel is match('.*Microsoft$')"

- name: tmux settings
  block:

  - name: install tmux
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - tmux
    become: true

  - name: create symlinks of tmux configuration files
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .tmux.conf
    become: false

  when:
    - "ansible_kernel is match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"

- name: font settings
  block:

  - name: prepare Windows fonts directory for WSL
    file:
      path: '{{ ansible_env.HOME }}/.local/share/fonts'
      state: directory
      force: true
    become: false

  - name: use Windows fonts on WSL
    file:
      src:  /mnt/c/Windows/Fonts
      dest: '{{ ansible_env.HOME }}/.local/share/fonts/win'
      state: link
    notify:
      - run fc-cache
    become: false

  when:
    - "ansible_kernel is match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"

- name: GnuPG settings
  block:

  - name: install GnuPG management packages
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - gnupg
      - pinentry-qt
      - dirmngr
    become: True

  - name: make sure that pinentry-* other than qt are uninstalled
    apt:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
      - pinentry-tty
      - pinentry-curses
      - pinentry-gnome3
      - pinentry-gtk2
      - pinentry-fltk
      - pinentry-qt4
    become: True

  - name: make sure that $HOME/bin directory is present
    file:
      path: '{{ ansible_env.HOME }}/bin'
      state: directory

  - name: create symlinks of gpg related script files
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/bin/{{ item }}'
      dest: '{{ ansible_env.HOME }}/bin/{{ item }}'
      state: link
    with_items:
      - remote-gpg

  - name: point IdentityAgent to gpg-agent
    lineinfile:
      dest: '{{ ansible_env.HOME }}/.ssh/config'
      regexp: '^\s*IdentityAgent'
      line: '  IdentityAgent {{ sshsocket }}'
      state: present

  become: false
  when:
    - "ansible_kernel is match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"

- name: Emacs settings
  block:

  - name: symlink EPWING folder
    file:
      src:  '{{ ansible_env.HOME }}/win/OneDrive/EPWING'
      dest: '{{ ansible_env.HOME }}/EPWING'
      state: link

  become: false
  when:
    - "ansible_kernel is match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"

- name: email settings
  block:

  - name: symlink email setting files
    file:
      src:  '{{ ansible_env.HOME }}/.dotfiles/{{ item }}'
      dest: '{{ ansible_env.HOME }}/{{ item }}'
      state: link
    with_items:
      - .mutt
      - .msmtprc
      - .signature.d
    become: false

  - name: install msmtp and mutt
    apt:
      name: '{{ packages }}'
      state: latest
    vars:
      packages:
      - mutt
      - msmtp
    become: true

  when:
    - "ansible_kernel is match('.*Microsoft$')"
    - "ansible_os_family == 'Debian'"
